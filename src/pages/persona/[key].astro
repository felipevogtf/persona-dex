---
import type { Personas, PersonaData } from '@models/persona.model';
import { PERSONAS_ROYAL_DATA } from '@data/personas.data';
import Layout from '@layouts/Layout.astro';
import Description from '@components/Description.astro';
import Weakness from '@components/Weakness.astro';
import { getBaseUrl } from '@utils/baseUrl';

const { key } = Astro.params;

const data: PersonaData = PERSONAS_ROYAL_DATA[key];
const STATS_NAME: { [key: number]: string } = {
  0: 'St',
  1: 'Ma',
  2: 'En',
  3: 'Ag',
  4: 'Lu',
};

function getProgress(valor: number) {
  const min = 0;
  const max = 99;

  const newMin = 0;
  const newMax = 80;
  const valorNormalizado = (valor - min) / (max - min);

  const newValue = newMin + valorNormalizado * (newMax - newMin);

  return `width: ${newValue}%`;
}

function back() {
  return getBaseUrl() ? getBaseUrl() : '/';
}

export function getStaticPaths() {
  const data: Personas = PERSONAS_ROYAL_DATA;

  return Object.keys(data).map(key => ({ params: { key: key } }));
}

console.log(getBaseUrl());
---

<Layout title={`${key} | PersonaDex`} description={data.description}>
  <section class="persona-detail">
    <div class="persona-detail__title">
      <a href={back()} aria-label="Return to the homepage">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"
          ><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
          <path
            d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"
          ></path></svg
        >
      </a>
      <h1>Lv. {data.level} {key}</h1>
    </div>

    <div class="persona-detail__weakness">
      <Weakness weakness={data.elems} />
    </div>

    <div class="persona-detail__img">
      <img
        src={getBaseUrl() + data.img}
        alt={`${key} persona image`}
        width="500"
        height="500"
      />
    </div>

    <div class="persona-detail__box">
      <div class="persona-detail__object">
        <div class="object">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"
            ><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
            <path
              d="M0 80V229.5c0 17 6.7 33.3 18.7 45.3l176 176c25 25 65.5 25 90.5 0L418.7 317.3c25-25 25-65.5 0-90.5l-176-176c-12-12-28.3-18.7-45.3-18.7H48C21.5 32 0 53.5 0 80zm112 32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"
            ></path></svg
          >
          <span>{data.item}</span>
        </div>
      </div>

      <div class="persona-detail__stat">
        {
          data.stats.map((stat, index) => (
            <div class="stat">
              <div class="stat__name">
                {STATS_NAME[index]} {stat}
              </div>
              <div class="stat__progress" style={getProgress(stat)} />
            </div>
          ))
        }
      </div>
    </div>
    <div class="persona-detail__description">
      <Description description={data.description} />
    </div>
  </section>

  <style>
    .persona-detail {
      color: white;
      display: grid;
      grid-template-columns: 1fr 1fr;

      margin-top: 50px;
      padding: 20px;
    }

    .persona-detail__title {
      padding: 0px 30px;
      background-color: black;
      transform: skew(-10deg, -2deg);
      grid-column: 1 / span 2;

      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 20px;
    }

    .persona-detail__description {
      padding-top: 30px;
      grid-column: span 2;
    }

    .persona-detail__title a {
      background: none;
      border: none;
      padding: 10px;
    }

    .persona-detail__title a:hover {
      cursor: pointer;
    }

    .persona-detail__title a svg {
      width: 20px;
      fill: white;
      transition: transform 300ms ease-out;
    }

    .persona-detail__title a:hover svg {
      transform: translateX(-5px);
    }

    .persona-detail__weakness {
      grid-column: 1 / span 2;
      padding-bottom: 50px;
    }

    .persona-detail__box {
      display: flex;
      flex-direction: column;
      gap: 20px;
      grid-column: 1 / span 2;
      padding-top: 20px;
    }

    .persona-detail__stat {
      box-sizing: border-box;
      max-width: 500px;
    }

    .stat {
      position: relative;
      display: flex;
      flex-direction: row;
      height: 40px;

      box-sizing: border-box;
      align-items: center;
    }

    .stat:nth-child(even) .stat__progress {
      margin-left: -5px;
    }
    .stat:nth-child(even) .stat__name {
      margin-left: 5px;
    }

    .persona-detail__img {
      grid-column: 1 / span 2;
    }

    .persona-detail__img img {
      max-width: 100%;
      object-fit: contain;
      display: block;
      margin: auto;
      max-height: 100%;

      filter: drop-shadow(7px 4px 0px white);
    }

    .stat__name {
      height: 100%;
      width: 20%;
      color: black;
      background-color: white;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: row;
      align-items: center;
      padding-left: 10px;

      font-weight: bold;
      font-size: x-large;
    }

    .stat__progress {
      box-sizing: border-box;
      border: solid 5px white;
      height: 100%;
      background-color: red;
    }

    .object {
      background-color: white;
      color: black;
      font-weight: bold;
      font-size: x-large;
      padding: 10px 20px;

      transform: skew(-10deg, 1deg);

      display: flex;
      flex-direction: row;
      align-items: center;

      gap: 20px;
    }

    .object svg {
      width: 20px;
    }

    .description-container {
      grid-row: 5;
    }

    @media (width > 550px) {
      .stat__name {
        font-size: xx-large;
      }
    }

    @media (width > 950px) {
      .persona-detail__description {
        padding-top: 0;
      }

      .persona-detail__box {
        padding-top: 0;
        grid-column: 1 / span 1;
        grid-row: 3;
      }

      .persona-detail__img {
        grid-column: 2 / span 1;
        grid-row: 3;
      }
    }

    @media (max-width: 804px) {
      .persona-detail__title {
        transform: skew(-5deg, 0deg);
      }
    }
  </style>
</Layout>
